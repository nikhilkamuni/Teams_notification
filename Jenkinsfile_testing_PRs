@Library('test_teams_nikamuni') _

pipeline {
    agent any

    environment {
        GITHUB_TOKEN = 'nikamuni_personal_git'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'nightly', url: 'https://github.com/nikhilkamuni/Teams_notification.git'
            }
        }

        stage('Setup Python Environment') {
            steps {
                sh 'pip install PyGithub requests'
            }
        }

        stage('Fetch Merged PRs') {
            steps {
                script {
                    def output = sh(script: "python3 fetch_merged_prs.py", returnStdout: true).trim()
                    echo "Merged PRs:\n${output}"
                    currentBuild.description = output // Store the output in build description for later use
                }
            }
        }
    }

    post {
        success {
            script {
                sendTeamsNotification('SUCCESS', env.JOB_NAME, currentBuild.number, env.BUILD_URL, currentBuild.description)
            }
        }
        failure {
            script {
                sendTeamsNotification('FAILURE', env.JOB_NAME, currentBuild.number, env.BUILD_URL, currentBuild.description)
            }
        }
        aborted {
            script {
                sendTeamsNotification('ABORTED', env.JOB_NAME, currentBuild.number, env.BUILD_URL, currentBuild.description)
            }
        }
        unstable {
            script {
                sendTeamsNotification('UNSTABLE', env.JOB_NAME, currentBuild.number, env.BUILD_URL, currentBuild.description)
            }
        }
    }
}
